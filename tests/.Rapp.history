library(bayesTFR)
make.tfr.prediction
baseTFR:::make.tfr.prediction
bayesTFR:::make.tfr.prediction
.libPaths('/Users/hana/src/R/lib')
library(bayesTFR)
help(tfr.predict)
help(tfr.map)
library(googleVis)
help(googleVis)
data(Fruits)
M <- gvisMotionChart(Fruits, idvar="Fruit", timevar="Year")
str(M)
help(gvisGeoMap)
G1 <- gvisGeoMap(Exports, locationvar='Country', numvar='Profit',#
                 options=list(dataMode="regions"))
plot(G1)
.libPaths('/Users/hana/src/R/lib')
library(bayesDem)
bayesDem.go()
.libPaths('/Users/hana/src/R/lib')
library(bayesDem)
bayesDem.go()
base:::detach(package:bayesDem)
library(bayesDem)
base:::detach(package:bayesDem, unload=TRUE)
library(bayesDem)
bayesDem.go()
base:::detach(package:bayesDem, unload=TRUE)
library(bayesDem)
bayesDem.go()
base:::detach(package:bayesDem, unload=TRUE)
library(bayesDem)
bayesDem.go()
help(substr)
substr('Female', 2,6) <- ''
substring('Female', 2,6) <- ''
x <- c("asfef", "qwerty", "yuiop[", "b", "stuff.blah.yech")
substring(x, 2) <- c("..", "+++")
x
substr('Female', 2:6) <- ''
y<-'Female'
substr(y, 2:6)
substr(y, 2,6)
substr(y, 2,6)<-''
y
substring(y, 2,6)<-''
y
help(grep)
y<-'Female'
help(match.args)
help(match)
base:::detach(package:bayesDem, unload=TRUE)
base:::detach(package:bayesLife, unload=TRUE)
library(bayesDem)
bayesDem.go()
help(tfr.map.gvis)
base:::detach(package:bayesLife, unload=TRUE)
base:::detach(package:bayesDem, unload=TRUE)
library(bayesDem)
bayesDem.go()
base:::detach(package:bayesDem, unload=TRUE)
library(bayesDem)
bayesDem.go()
help(MapTable)
help(gvisMapTable)
help(gvisTable)
base:::detach(package:bayesDem, unload=TRUE)
library(bayesDem)
bayesDem.go()
base:::detach(package:bayesDem, unload=TRUE)
base:::detach(package:bayesTFR, unload=TRUE)
base:::detach(package:bayesLife, unload=TRUE)
base:::detach(package:bayesTFR, unload=TRUE)
library(bayesDem)
bayesDem.go()
base:::detach(package:bayesTFR, unload=TRUE)
base:::detach(package:bayesDem, unload=TRUE)
library(bayesDem)
bayesDem.go()
.libPaths('/Users/hana/src/R/lib')
library(bayesDem)
bayesDem.go()
library(snowFT)
help(performParallel)
help(rnorm)
dir <- '/Users/hana/hana.diana/bm/psrc_parcel/simulation_results/0127'#
subdirs <- c('no_viaduct', 'viaduct')#
year <- 2011
sdir <- subdirs[1]
fullpath <- file.path(dir, subdir, year, 'commute_travel_data.tab')
fullpath <- file.path(dir, sdir, year, 'commute_travel_data.tab')
data <- read.table(fullpath, header=TRUE)
subdirs <- c('no_viaduct_pe', 'viaduct_pe')
sdir <- subdirs[1]
fullpath <- file.path(dir, sdir, year, 'commute_travel_data.tab')
data <- read.table(fullpath, header=TRUE)
logtt <- log(data['am_pk_travel_time:f4'])
logtt <- log(data[,'am_pk_travel_time:f4'])
colnames(data)
logtt <- log(data[,'am_pk_travel_time.f4'])
logtt
simtt <- exp(rnorm(50, logtt-0.346, sd=0.118))
simtt
simtt <- exp(rnorm(rep(2, length(logtt)), logtt-0.346, sd=0.118))
dim(simtt)
length(simtt)
length(logtt)
n <- 100
	l <- length(logtt)#
	simtt <- matrix(NA, n, l)#
	for(i in 1:l)#
		simtt[,i] <- rnorm(n, logtt[i]-0.346, sd=0.118)#
	simtt <- exp(simtt)
dim(simtt)
head(simtt)
subdirs <- c('no_viaduct_pe', 'viaduct_pe')#
year <- 2011#
n <- 100#
ldir <- length(subdirs)#
for (sdir in subdirs) {#
	fullpath <- file.path(dir, sdir, year, 'commute_travel_data.tab')#
	simtt[[sdir]] <- read.table(fullpath, header=TRUE)[,'am_pk_travel_time.f4']#
	#logtt <- log(data[,'am_pk_travel_time.f4'])#
	#l <- length(logtt)#
	#simtt <- matrix(NA, n, l)#
	#for(i in 1:l)#
	#	simtt[,i] <- rnorm(n, logtt[i]-0.346, sd=0.118)#
	#simtt <- exp(simtt)#
}
simtt <- list()#
for (sdir in subdirs) {#
	fullpath <- file.path(dir, sdir, year, 'commute_travel_data.tab')#
	simtt[[sdir]] <- read.table(fullpath, header=TRUE)[,'am_pk_travel_time.f4']#
	#logtt <- log(data[,'am_pk_travel_time.f4'])#
	#l <- length(logtt)#
	#simtt <- matrix(NA, n, l)#
	#for(i in 1:l)#
	#	simtt[,i] <- rnorm(n, logtt[i]-0.346, sd=0.118)#
	#simtt <- exp(simtt)#
}
subdirs <- c('no_viaduct_pe', 'with_viaduct_pe')#
year <- 2011#
n <- 100#
ldir <- length(subdirs)#
simtt <- list()#
for (sdir in subdirs) {#
	fullpath <- file.path(dir, sdir, year, 'commute_travel_data.tab')#
	simtt[[sdir]] <- read.table(fullpath, header=TRUE)[,'am_pk_travel_time.f4']#
	#logtt <- log(data[,'am_pk_travel_time.f4'])#
	#l <- length(logtt)#
	#simtt <- matrix(NA, n, l)#
	#for(i in 1:l)#
	#	simtt[,i] <- rnorm(n, logtt[i]-0.346, sd=0.118)#
	#simtt <- exp(simtt)#
}
col <- c('black', 'red', rainbow(ldir+1)[2:ldir])
plot.tt <- function(i, show.abbr=T) {#
        xmin <- 99999#
        xmax <- 0#
        ymaxd <- 0#
        corr.data <- as.list(rep(NA, lprefix))#
        means <- rep(NA, lprefix)#
        for (j in 1:ldir) {#
                data <- as.vector(simtt[[j]][i], mode='numeric')#
                data <- data[3:length(data)]#
                dens <- density(data)#
                p <- dens$y / sum(dens$y)#
                data <- sample(dens$x[dens$x>0], n, replace=T, prob=p[dens$x>0])#
                corr.data[[j]] <- exp(rnorm(rep(1, length(data)), log(data)-0.7, 0.14))#
                xmin <- min(xmin, corr.data[[j]])#
                xmax <- max(xmax, corr.data[[j]])#
                ymaxd <- max(ymaxd, max(density(corr.data[[j]])$y))#
                means[j] <- mean(corr.data[[j]])#
                                }#
        for (j in 1:ldir) {#
                if (j == 1) {#
		   main <- commute.descr[i]#
		   if(show.abbr) {#
		   	main<-paste(commute.names[i],':',main, sep='')#
			}#
                   plot(density(corr.data[[j]]), col=col[j], xlim=c(xmin, xmax),#
                                ylim=c(0, ymaxd), main=main, xlab='')#
                } else {#
                        lines(density(corr.data[[j]]), col=col[j])#
                        }#
                abline(v=means[j], col=col[j], lty=1, lw=3)#
                abline(v=quantile(corr.data[[j]], 0.05), col=col[j], lty=2)#
                abline(v=quantile(corr.data[[j]], 0.95), col=col[j], lty=2)#
                }#
}
par(mfrow=c(4,4))#
for (i in 1:length(commute.names)) {#
	if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
	   plot.tt(i)#
	   }#
	}
commutes <- read.table('/Volumes/LaCie/data/hana/urbansim_cache/psrc/parcel/bm/emme2_on_observed_data/commute_travel_data.tab',  #
				header=TRUE)
commute.names <- commutes[,'name.S6']#
commute.descr <- commutes[,'description.S20']
par(mfrow=c(4,4))#
for (i in 1:length(commute.names)) {#
	if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
	   plot.tt(i)#
	   }#
	}
plot.tt <- function(i, show.abbr=T) {#
        xmin <- 99999#
        xmax <- 0#
        ymaxd <- 0#
        corr.data <- as.list(rep(NA, ldir))#
        means <- rep(NA, ldir)#
        for (j in 1:ldir) {#
                data <- as.vector(simtt[[j]][i], mode='numeric')#
                data <- data[3:length(data)]#
                dens <- density(data)#
                p <- dens$y / sum(dens$y)#
                data <- sample(dens$x[dens$x>0], n, replace=T, prob=p[dens$x>0])#
                corr.data[[j]] <- exp(rnorm(rep(1, length(data)), log(data)-0.7, 0.14))#
                xmin <- min(xmin, corr.data[[j]])#
                xmax <- max(xmax, corr.data[[j]])#
                ymaxd <- max(ymaxd, max(density(corr.data[[j]])$y))#
                means[j] <- mean(corr.data[[j]])#
                                }#
        for (j in 1:ldir) {#
                if (j == 1) {#
		   main <- commute.descr[i]#
		   if(show.abbr) {#
		   	main<-paste(commute.names[i],':',main, sep='')#
			}#
                   plot(density(corr.data[[j]]), col=col[j], xlim=c(xmin, xmax),#
                                ylim=c(0, ymaxd), main=main, xlab='')#
                } else {#
                        lines(density(corr.data[[j]]), col=col[j])#
                        }#
                abline(v=means[j], col=col[j], lty=1, lw=3)#
                abline(v=quantile(corr.data[[j]], 0.05), col=col[j], lty=2)#
                abline(v=quantile(corr.data[[j]], 0.95), col=col[j], lty=2)#
                }#
}
par(mfrow=c(4,4))#
for (i in 1:length(commute.names)) {#
	if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
	   plot.tt(i)#
	   }#
	}
options(error=quote(dump.frames("last.dump", TRUE)))
par(mfrow=c(4,4))#
for (i in 1:length(commute.names)) {#
	if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
	   plot.tt(i)#
	   }#
	}
load('last.dump.rda'); debugger()
dim(data)
length(data)
data
simtt
plot.tt <- function(i, show.abbr=T) {#
        xmin <- 99999#
        xmax <- 0#
        ymaxd <- 0#
        corr.data <- as.list(rep(NA, ldir))#
        means <- rep(NA, ldir)#
        for (j in 1:ldir) {#
                data <- as.vector(simtt[[j]][i], mode='numeric')#
                dens <- density(data)#
                p <- dens$y / sum(dens$y)#
                data <- sample(dens$x[dens$x>0], n, replace=T, prob=p[dens$x>0])#
                corr.data[[j]] <- exp(rnorm(rep(1, length(data)), log(data)-0.7, 0.14))#
                xmin <- min(xmin, corr.data[[j]])#
                xmax <- max(xmax, corr.data[[j]])#
                ymaxd <- max(ymaxd, max(density(corr.data[[j]])$y))#
                means[j] <- mean(corr.data[[j]])#
                                }#
        for (j in 1:ldir) {#
                if (j == 1) {#
		   main <- commute.descr[i]#
		   if(show.abbr) {#
		   	main<-paste(commute.names[i],':',main, sep='')#
			}#
                   plot(density(corr.data[[j]]), col=col[j], xlim=c(xmin, xmax),#
                                ylim=c(0, ymaxd), main=main, xlab='')#
                } else {#
                        lines(density(corr.data[[j]]), col=col[j])#
                        }#
                abline(v=means[j], col=col[j], lty=1, lw=3)#
                abline(v=quantile(corr.data[[j]], 0.05), col=col[j], lty=2)#
                abline(v=quantile(corr.data[[j]], 0.95), col=col[j], lty=2)#
                }#
}
par(mfrow=c(4,4))#
for (i in 1:length(commute.names)) {#
	if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
	   plot.tt(i)#
	   }#
	}
help(rnorm)
plot.tt <- function(i, show.abbr=T) {#
        ymaxd <- 0#
        corr.data <- as.list(rep(NA, ldir))#
        means <- rep(NA, ldir)#
        for (j in 1:ldir) {#
                data <- as.vector(simtt[[j]][i], mode='numeric')#
                corr.data[[j]] <- exp(rnorm(n, log(data)-0.7, 0.14))#
                ymaxd <- max(ymaxd, corr.data[[j]])#
        }#
        for (j in 1:ldir) {#
                boxplot(corr.data[[j]], col=col[j],#
                                ylim=c(ymin, ymaxd), main='', xlab='', xaxt='n', boxwex=0.2, range=0, whisklty='solid', border='black')#
                        axis(1, 1:length(commutes), labels=xnam, las=1)#
                } else {#
                        boxplot(corr.data[[j]], col=col[j], add=T, at=(1:length(commutes))+0.3, xaxt='n', boxwex=0.2, range=0, whisklty='solid')#
                }#
}
plot.tt <- function(i, show.abbr=T) {#
        ymaxd <- 0#
        corr.data <- as.list(rep(NA, ldir))#
        means <- rep(NA, ldir)#
        for (j in 1:ldir) {#
                data <- as.vector(simtt[[j]][i], mode='numeric')#
                corr.data[[j]] <- exp(rnorm(n, log(data)-0.7, 0.14))#
                ymaxd <- max(ymaxd, corr.data[[j]])#
        }#
        for (j in 1:ldir) {#
                boxplot(corr.data[[j]], col=col[j],#
                                ylim=c(ymin, ymaxd), main='', xlab='', xaxt='n', boxwex=0.2, range=0, whisklty='solid', border='black')#
                        axis(1, 1:length(commutes), labels=xnam, las=1)#
         } else {#
                        boxplot(corr.data[[j]], col=col[j], add=T, at=(1:length(commutes))+0.3, xaxt='n', boxwex=0.2, range=0, whisklty='solid')#
                }#
                          }#
        for (i in 2:length(commutes)) {#
                abline(v=i-0.35)#
        }#
#
}
plot.tt <- function(i, show.abbr=T) {#
        ymaxd <- 0#
        corr.data <- as.list(rep(NA, ldir))#
        means <- rep(NA, ldir)#
        for (j in 1:ldir) {#
                data <- as.vector(simtt[[j]][i], mode='numeric')#
                corr.data[[j]] <- exp(rnorm(n, log(data)-0.7, 0.14))#
                ymaxd <- max(ymaxd, corr.data[[j]])#
        }#
        for (j in 1:ldir) {#
        	if (j == 1) {#
        		boxplot(corr.data[[j]], col=col[j],#
                       ylim=c(ymin, ymaxd), main='', xlab='', xaxt='n', boxwex=0.2, range=0, whisklty='solid', border='black')#
            	axis(1, 1:length(commutes), labels=xnam, las=1)#
         	} else {#
            	boxplot(corr.data[[j]], col=col[j], add=T, at=(1:length(commutes))+0.3, xaxt='n', boxwex=0.2, range=0, whisklty='solid')#
         	}#
        }             #
        for (i in 2:length(commutes)) {#
                abline(v=i-0.35)#
        }#
}
par(mfrow=c(4,4))#
for (i in 1:length(commute.names)) {#
	if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
	   plot.tt(i)#
	   }#
	}
plot.tt <- function(i, show.abbr=T) {#
        ymaxd <- 0#
        ymin <- 9999#
        corr.data <- as.list(rep(NA, ldir))#
        means <- rep(NA, ldir)#
        for (j in 1:ldir) {#
                data <- as.vector(simtt[[j]][i], mode='numeric')#
                corr.data[[j]] <- exp(rnorm(n, log(data)-0.7, 0.14))#
                ymaxd <- max(ymaxd, corr.data[[j]])#
        }#
        for (j in 1:ldir) {#
        	if (j == 1) {#
        		boxplot(corr.data[[j]], col=col[j],#
                       ylim=c(ymin, ymaxd), main='', xlab='', xaxt='n', boxwex=0.2, range=0, whisklty='solid', border='black')#
            	axis(1, 1:length(commutes), labels=xnam, las=1)#
         	} else {#
            	boxplot(corr.data[[j]], col=col[j], add=T, at=(1:length(commutes))+0.3, xaxt='n', boxwex=0.2, range=0, whisklty='solid')#
         	}#
        }             #
        for (i in 2:length(commutes)) {#
                abline(v=i-0.35)#
        }#
}
par(mfrow=c(4,4))#
for (i in 1:length(commute.names)) {#
	if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
	   plot.tt(i)#
	   }#
	}
plot.tt <- function(i, show.abbr=T) {#
        ymaxd <- 0#
        ymin <- 9999#
        corr.data <- as.list(rep(NA, ldir))#
        xnam <- rep(NA, length(commutes))#
        for (j in 1:ldir) {#
                data <- as.vector(simtt[[j]][i], mode='numeric')#
                corr.data[[j]] <- exp(rnorm(n, log(data)-0.7, 0.14))#
                ymaxd <- max(ymaxd, corr.data[[j]])#
        }#
        for (j in 1:ldir) {#
        	if (j == 1) {#
        		boxplot(corr.data[[j]], col=col[j],#
                       ylim=c(ymin, ymaxd), main='', xlab='', xaxt='n', boxwex=0.2, range=0, whisklty='solid', border='black')#
            	axis(1, 1:length(commutes), labels=xnam, las=1)#
         	} else {#
            	boxplot(corr.data[[j]], col=col[j], add=T, at=(1:length(commutes))+0.3, xaxt='n', boxwex=0.2, range=0, whisklty='solid')#
         	}#
        }             #
        for (i in 2:length(commutes)) {#
                abline(v=i-0.35)#
        }#
}
par(mfrow=c(4,4))#
for (i in 1:length(commute.names)) {#
	if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
	   plot.tt(i)#
	   }#
	}
load('last.dump.rda'); debugger()
corr.data[[j]]
length(corr.data[[j]])
com <- c()#
for (i in 1:length(commute.names)) {#
        if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
           com <- c(com, i)#
           }#
        }#
plot.tt(com)
load('last.dump.rda'); debugger()
corr.data[[j]]
plot.tt <- function(commutes, show.abbr=T) {#
        ymaxd <- 0#
        ymin <- 9999#
        corr.data <- as.list(rep(NA, ldir))#
        xnam <- rep(NA, length(commutes))#
        for (j in 1:ldir) {#
        	corr.data[[j]] <- as.list(rep(NA, length(commutes)))#
        	for (i in 1:length(commutes)) {#
        		xnam[i]<-commute.names[commutes[i]]#
                data <- as.vector(simtt[[j]][commutes[i]], mode='numeric')#
                simdata <- exp(rnorm(n, log(data)-0.7, 0.14))#
                corr.data[[j]][[i]] <- quantile(simdata, c(0.025,0.25,0.5,0.75, 0.975))#
                ymaxd <- max(ymaxd, corr.data[[j]][[i]])#
                ymin <- min(ymin, corr.data[[j]][[i]])#
			}#
        }#
        for (j in 1:ldir) {#
        	if (j == 1) {#
        		boxplot(corr.data[[j]], col=col[j],#
                       ylim=c(ymin, ymaxd), main='', xlab='', xaxt='n', boxwex=0.2, range=0, whisklty='solid', border='black')#
            	axis(1, 1:length(commutes), labels=xnam, las=1)#
         	} else {#
            	boxplot(corr.data[[j]], col=col[j], add=T, at=(1:length(commutes))+0.3, xaxt='n', boxwex=0.2, range=0, whisklty='solid')#
         	}#
        }             #
        for (i in 2:length(commutes)) {#
                abline(v=i-0.35)#
        }#
}
com <- c()#
for (i in 1:length(commute.names)) {#
        if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
           com <- c(com, i)#
           }#
        }#
plot.tt(com)
col <- c('grey', 'red', rainbow(ldir+1)[2:ldir])
com <- c()#
for (i in 1:length(commute.names)) {#
        if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
           com <- c(com, i)#
           }#
        }#
plot.tt(com)
com <- 19:length(commute.names)#
plot.tt(com,F)
subdirs <- c('with_viaduct_pe', 'no_viaduct_pe')#
year <- 2011#
n <- 100#
ldir <- length(subdirs)#
simtt <- list()#
for (sdir in subdirs) {#
	fullpath <- file.path(dir, sdir, year, 'commute_travel_data.tab')#
	simtt[[sdir]] <- read.table(fullpath, header=TRUE)[,'am_pk_travel_time.f4']#
	#logtt <- log(data[,'am_pk_travel_time.f4'])#
	#l <- length(logtt)#
	#simtt <- matrix(NA, n, l)#
	#for(i in 1:l)#
	#	simtt[,i] <- rnorm(n, logtt[i]-0.346, sd=0.118)#
	#simtt <- exp(simtt)#
}
com <- c()#
for (i in 1:length(commute.names)) {#
        if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
           com <- c(com, i)#
           }#
        }#
plot.tt(com)
par(mfrow=c(2,3))#
for (i in 1:length(commute.names)) {#
	if ((i > 18) && substr(commute.names[i], 1, 3) != 'Via') {#
	   plot.tt(i,F)#
	}#
	}
for (i in 1:length(commute.names)) {#
	if ((i > 18) && substr(commute.names[i], 1, 3) != 'Via') {#
	   plot.tt(i,F)#
	}#
	}
com <- 19:length(commute.names)#
plot.tt(com,F)
        repl <- 10000#
        dif <- as.list(rep(NA, length(commute.names)))#
        #pdf('travel_times_diff_bp.pdf', height=10, width=14)#
        for (i in 1:length(commute.names)) {#
                data.viad <- as.vector(simtt[[1]][i], mode='numeric')#
                simdata.viad <- exp(rnorm(repl, log(data.viad)-0.7, 0.14))#
                data.noviad <- as.vector(simtt[[2]][i], mode='numeric')#
                simdata.noviad <- exp(rnorm(repl, log(data.noviad)-0.7, 0.14))#
                dif[[i]] <- sample.noviad - sample.viad#
        }#
        boxplot(dif)#
        abline(h=0, col='red')
        dif <- as.list(rep(NA, length(commute.names)))#
        #pdf('travel_times_diff_bp.pdf', height=10, width=14)#
        for (i in 1:length(commute.names)) {#
                data.viad <- as.vector(simtt[[1]][i], mode='numeric')#
                simdata.viad <- exp(rnorm(repl, log(data.viad)-0.7, 0.14))#
                data.noviad <- as.vector(simtt[[2]][i], mode='numeric')#
                simdata.noviad <- exp(rnorm(repl, log(data.noviad)-0.7, 0.14))#
                dif[[i]] <- simdata.noviad - simdata.viad#
        }#
        boxplot(dif)#
        abline(h=0, col='red')
help(boxplot)
        repl <- 10000#
        dif <- as.list(rep(NA, length(commute.names)))#
        #pdf('travel_times_diff_bp.pdf', height=10, width=14)#
        for (i in 1:length(commute.names)) {#
                data.viad <- as.vector(simtt[[1]][i], mode='numeric')#
                simdata.viad <- exp(rnorm(repl, log(data.viad)-0.7, 0.14))#
                data.noviad <- as.vector(simtt[[2]][i], mode='numeric')#
                simdata.noviad <- exp(rnorm(repl, log(data.noviad)-0.7, 0.14))#
                dif[[i]] <- simdata.noviad - simdata.viad#
        }#
        boxplot(dif, horizontal = TRUE, outline=FALSE)#
        abline(h=0, col='red')
abline(v=0, col='red')
boxplot(dif[length(commute.names):1], horizontal = TRUE, outline=FALSE)
abline(h=8.5)
boxplot(dif[length(commute.names):1], horizontal = TRUE, outline=FALSE, yaxt='n',)#
        axis(2, length(commutes):1, labels=xnam, las=1)
boxplot(dif[length(commute.names):1], horizontal = TRUE, outline=FALSE, yaxt='n')#
        axis(2, length(commutes):1, labels=commute.names, las=1)
commute.names
commute.names[1:8]
commute.names[[1:8]]
commute.names[1]
length(commutes)
boxplot(dif[length(commute.names):1], horizontal = TRUE, outline=FALSE, yaxt='n')#
        axis(2, length(commute.names):1, labels=commute.names, las=1)
par(mfrow=c(3,1)) #
com <- c()#
for (i in 1:length(commute.names)) {#
        if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
           com <- c(com, i)#
           }#
        }#
plot.tt(com)#
#
#
com <- 19:length(commute.names)#
plot.tt(com,F)#
#
        repl <- 10000#
        dif <- as.list(rep(NA, length(commute.names)))#
        #pdf('travel_times_diff_bp.pdf', height=10, width=14)#
        for (i in 1:length(commute.names)) {#
                data.viad <- as.vector(simtt[[1]][i], mode='numeric')#
                simdata.viad <- exp(rnorm(repl, log(data.viad)-0.7, 0.14))#
                data.noviad <- as.vector(simtt[[2]][i], mode='numeric')#
                simdata.noviad <- exp(rnorm(repl, log(data.noviad)-0.7, 0.14))#
                dif[[i]] <- simdata.noviad - simdata.viad#
        }#
        boxplot(dif[length(commute.names):1], horizontal = TRUE, outline=FALSE, yaxt='n')#
        axis(2, length(commute.names):1, labels=commute.names, las=1)#
        abline(v=0, col='red')#
        abline(h=8.5)
com <- c()#
for (i in 1:length(commute.names)) {#
        if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
           com <- c(com, i)#
           }#
        }
com
commute.names
commute.names[1]
help(factor)
commute.names[1, drop=TRUE]
plot.tt <- function(commutes, show.abbr=T) {#
        ymaxd <- 0#
        ymin <- 9999#
        corr.data <- as.list(rep(NA, ldir))#
        xnam <- rep(NA, length(commutes))#
        for (j in 1:ldir) {#
        	corr.data[[j]] <- as.list(rep(NA, length(commutes)))#
        	for (i in 1:length(commutes)) {#
        		xnam[i]<-commute.names[commutes[i], drop=TRUE]#
                data <- as.vector(simtt[[j]][commutes[i]], mode='numeric')#
                simdata <- exp(rnorm(n, log(data)-0.7, 0.14))#
                corr.data[[j]][[i]] <- quantile(simdata, c(0.025,0.25,0.5,0.75, 0.975))#
                ymaxd <- max(ymaxd, corr.data[[j]][[i]])#
                ymin <- min(ymin, corr.data[[j]][[i]])#
			}#
        }#
        for (j in 1:ldir) {#
        	if (j == 1) {#
        		boxplot(corr.data[[j]], col=col[j],#
                       ylim=c(ymin, ymaxd), main='', xlab='', xaxt='n', boxwex=0.2, range=0, whisklty='solid', border='black')#
            	axis(1, 1:length(commutes), labels=xnam, las=1)#
            	print(xnam)#
         	} else {#
            	boxplot(corr.data[[j]], col=col[j], add=T, at=(1:length(commutes))+0.3, xaxt='n', boxwex=0.2, range=0, whisklty='solid')#
         	}#
        }             #
        for (i in 2:length(commutes)) {#
                abline(v=i-0.35)#
        }#
}
com <- c()#
for (i in 1:length(commute.names)) {#
        if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
           com <- c(com, i)#
           }#
        }#
plot.tt(com)
plot.tt <- function(commutes, show.abbr=T) {#
        ymaxd <- 0#
        ymin <- 9999#
        corr.data <- as.list(rep(NA, ldir))#
        xnam <- rep(NA, length(commutes))#
        for (j in 1:ldir) {#
        	corr.data[[j]] <- as.list(rep(NA, length(commutes)))#
        	for (i in 1:length(commutes)) {#
        		xnam[i]<-commute.names[commutes[i]]#
                data <- as.vector(simtt[[j]][commutes[i]], mode='numeric')#
                simdata <- exp(rnorm(n, log(data)-0.7, 0.14))#
                corr.data[[j]][[i]] <- quantile(simdata, c(0.025,0.25,0.5,0.75, 0.975))#
                ymaxd <- max(ymaxd, corr.data[[j]][[i]])#
                ymin <- min(ymin, corr.data[[j]][[i]])#
			}#
        }#
        for (j in 1:ldir) {#
        	if (j == 1) {#
        		boxplot(corr.data[[j]], col=col[j],#
                       ylim=c(ymin, ymaxd), main='', xlab='', xaxt='n', boxwex=0.2, range=0, whisklty='solid', border='black')#
            	axis(1, 1:length(commutes), labels=xnam, las=1)#
            	print(xnam)#
         	} else {#
            	boxplot(corr.data[[j]], col=col[j], add=T, at=(1:length(commutes))+0.3, xaxt='n', boxwex=0.2, range=0, whisklty='solid')#
         	}#
        }             #
        for (i in 2:length(commutes)) {#
                abline(v=i-0.35)#
        }#
}
com <- c()#
for (i in 1:length(commute.names)) {#
        if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
           com <- c(com, i)#
           }#
        }#
plot.tt(com)
as.character(commute.names)
plot.tt <- function(commutes, show.abbr=T) {#
        ymaxd <- 0#
        ymin <- 9999#
        corr.data <- as.list(rep(NA, ldir))#
        xnam <- rep(NA, length(commutes))#
        for (j in 1:ldir) {#
        	corr.data[[j]] <- as.list(rep(NA, length(commutes)))#
        	for (i in 1:length(commutes)) {#
        		xnam[i]<-as.character(commute.names)[commutes[i]]#
                data <- as.vector(simtt[[j]][commutes[i]], mode='numeric')#
                simdata <- exp(rnorm(n, log(data)-0.7, 0.14))#
                corr.data[[j]][[i]] <- quantile(simdata, c(0.025,0.25,0.5,0.75, 0.975))#
                ymaxd <- max(ymaxd, corr.data[[j]][[i]])#
                ymin <- min(ymin, corr.data[[j]][[i]])#
			}#
        }#
        for (j in 1:ldir) {#
        	if (j == 1) {#
        		boxplot(corr.data[[j]], col=col[j],#
                       ylim=c(ymin, ymaxd), main='', xlab='', xaxt='n', boxwex=0.2, range=0, whisklty='solid', border='black')#
            	axis(1, 1:length(commutes), labels=xnam, las=1)#
            	print(xnam)#
         	} else {#
            	boxplot(corr.data[[j]], col=col[j], add=T, at=(1:length(commutes))+0.3, xaxt='n', boxwex=0.2, range=0, whisklty='solid')#
         	}#
        }             #
        for (i in 2:length(commutes)) {#
                abline(v=i-0.35)#
        }#
}
plot.tt(com)
com <- 19:length(commute.names)#
plot.tt(com,F)
commutes <- read.table('/Volumes/LaCie/data/hana/urbansim_cache/psrc/parcel/bm/emme2_on_observed_data/commute_travel_data.tab',  #
				header=TRUE)#
commute.names <- as.character(commutes[,'name.S6'])#
commute.names[19:length(commute.names)] <- c('8', '9', '10', '11a', '11b', '12', '13', '14')
plot.tt <- function(commutes, show.abbr=T) {#
        ymaxd <- 0#
        ymin <- 9999#
        corr.data <- as.list(rep(NA, ldir))#
        xnam <- rep(NA, length(commutes))#
        for (j in 1:ldir) {#
        	corr.data[[j]] <- as.list(rep(NA, length(commutes)))#
        	for (i in 1:length(commutes)) {#
        		xnam[i]<-commute.names[commutes[i]]#
                data <- as.vector(simtt[[j]][commutes[i]], mode='numeric')#
                simdata <- exp(rnorm(n, log(data)-0.7, 0.14))#
                corr.data[[j]][[i]] <- quantile(simdata, c(0.025,0.25,0.5,0.75, 0.975))#
                ymaxd <- max(ymaxd, corr.data[[j]][[i]])#
                ymin <- min(ymin, corr.data[[j]][[i]])#
			}#
        }#
        for (j in 1:ldir) {#
        	if (j == 1) {#
        		boxplot(corr.data[[j]], col=col[j],#
                       ylim=c(ymin, ymaxd), main='', xlab='', xaxt='n', boxwex=0.2, range=0, whisklty='solid', border='black')#
            	axis(1, 1:length(commutes), labels=xnam, las=1)#
            	print(xnam)#
         	} else {#
            	boxplot(corr.data[[j]], col=col[j], add=T, at=(1:length(commutes))+0.3, xaxt='n', boxwex=0.2, range=0, whisklty='solid')#
         	}#
        }             #
        for (i in 2:length(commutes)) {#
                abline(v=i-0.35)#
        }#
}
com <- 19:length(commute.names)#
plot.tt(com,F)
par(mfrow=c(2,1)) #
com <- c()#
for (i in 1:length(commute.names)) {#
        if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
           com <- c(com, i)#
           }#
        }#
plot.tt(com)#
#
#
com <- 19:length(commute.names)#
plot.tt(com,F)
pdf('travel_times_base_routes_2011.pdf', height=10, width=10)#
par(mfrow=c(2,1)) #
com <- c()#
for (i in 1:length(commute.names)) {#
        if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
           com <- c(com, i)#
           }#
        }#
plot.tt(com)#
dev.off()
pdf('travel_times_added_routes_2011.pdf', height=10, width=14)#
com <- 19:length(commute.names)#
plot.tt(com,F)#
dev.off()#
        repl <- 10000#
        dif <- as.list(rep(NA, length(commute.names)))#
        pdf('travel_times_diff_2011.pdf', height=10, width=14)#
        for (i in 1:length(commute.names)) {#
                data.viad <- as.vector(simtt[[1]][i], mode='numeric')#
                simdata.viad <- exp(rnorm(repl, log(data.viad)-0.7, 0.14))#
                data.noviad <- as.vector(simtt[[2]][i], mode='numeric')#
                simdata.noviad <- exp(rnorm(repl, log(data.noviad)-0.7, 0.14))#
                dif[[i]] <- simdata.noviad - simdata.viad#
        }#
        boxplot(dif[length(commute.names):1], horizontal = TRUE, outline=FALSE, yaxt='n')#
        axis(2, length(commute.names):1, labels=commute.names, las=1)#
        abline(v=0, col='red')#
        abline(h=8.5)#
        dev.off()
pdf('travel_times_base_routes_2011.pdf', height=10, width=10)#
#par(mfrow=c(2,1)) #
com <- c()#
for (i in 1:length(commute.names)) {#
        if (i <= 18 && substr(commute.names[i], 1, 1) != 8 && substr(commute.names[i], 1, 1) != 9) {#
           com <- c(com, i)#
           }#
        }#
plot.tt(com)#
dev.off()
difa <- dif[19:26]
dim(difa)
length(difa)
sapply(difa, mean)
dm <- sapply(difa, mean)
mean(dm)
        dif <- as.list(rep(NA, length(commute.names)))#
        #pdf('travel_times_diff_2011.pdf', height=10, width=14)#
        for (i in 1:length(commute.names)) {#
                data.viad <- as.vector(simtt[[1]][i], mode='numeric')#
                simdata.viad <- exp(rnorm(repl, log(data.viad)-0.7, 0.14))#
                data.noviad <- as.vector(simtt[[2]][i], mode='numeric')#
                simdata.noviad <- exp(rnorm(repl, log(data.noviad)-0.7, 0.14))#
                d <- simdata.noviad - simdata.viad#
                dif[[i]] <- quantile(d, c(0.025,0.25,0.5,0.75, 0.975))#
        }#
        boxplot(dif[length(commute.names):1], horizontal = TRUE, outline=FALSE, yaxt='n')#
        axis(2, length(commute.names):1, labels=commute.names, las=1)#
        abline(v=0, col='red')#
        abline(h=8.5)
dif
difa <- dif[19:26]
difa
dif[19:26][3]
dif[19:26][,3]
        repl <- 10000#
        dif <- as.list(rep(NA, length(commute.names)))#
        #pdf('travel_times_diff_2011.pdf', height=10, width=14)#
        medians <- c()#
        for (i in 1:length(commute.names)) {#
                data.viad <- as.vector(simtt[[1]][i], mode='numeric')#
                simdata.viad <- exp(rnorm(repl, log(data.viad)-0.7, 0.14))#
                data.noviad <- as.vector(simtt[[2]][i], mode='numeric')#
                simdata.noviad <- exp(rnorm(repl, log(data.noviad)-0.7, 0.14))#
                d <- simdata.noviad - simdata.viad#
                dif[[i]] <- quantile(d, c(0.025,0.25,0.5,0.75, 0.975))#
                medians <- c(medians, dif[[i]][3])#
        }#
        boxplot(dif[length(commute.names):1], horizontal = TRUE, outline=FALSE, yaxt='n')#
        axis(2, length(commute.names):1, labels=commute.names, las=1)#
        abline(v=0, col='red')#
        abline(h=8.5)#
        #dev.off()#
avg.base <- mean(medians[1:18])#
avg.added <- mean(medians[19:26])
avg.base
avg.added
        dif <- as.list(rep(NA, length(commute.names)))#
        pdf('travel_times_diff_2011.pdf', height=10, width=14)#
        medians <- c()#
        for (i in 1:length(commute.names)) {#
                data.viad <- as.vector(simtt[[1]][i], mode='numeric')#
                simdata.viad <- exp(rnorm(repl, log(data.viad)-0.7, 0.14))#
                data.noviad <- as.vector(simtt[[2]][i], mode='numeric')#
                simdata.noviad <- exp(rnorm(repl, log(data.noviad)-0.7, 0.14))#
                d <- simdata.noviad - simdata.viad#
                dif[[i]] <- quantile(d, c(0.025,0.25,0.5,0.75, 0.975))#
                medians <- c(medians, dif[[i]][3])#
        }#
        boxplot(dif[length(commute.names):1], horizontal = TRUE, outline=FALSE, yaxt='n')#
        axis(2, length(commute.names):1, labels=commute.names, las=1)#
        abline(v=0, col='red')#
        abline(h=8.5)#
        dev.off()#
avg.base <- mean(medians[1:18])#
avg.added <- mean(medians[19:26])
avg.base
avg.added
medians
.libPaths('/Users/hana/src/R/lib')
library(bayesTFR)
cite(bayesTFR)
citation(bayesTFR)
citation('bayesTFR')
source('run_tests.R')
tfr <- bayesTFR:::read.UNtfr(2008)
dim(tfr$data)
length(tfr$data)
.libPaths('/Users/hana/src/R/lib')
detach(package:bayesTFR)
source('run_tests.R')
detach(package:bayesTFR, unload=TRUE)
source('run_tests.R')
options(error=quote(dump.frames("last.dump", TRUE)))
source('run_tests.R')
load('last.dump.rda'); debugger()
summary(pred, country='Uganda')
summary(pred, country='Uganda')
shifted.projs
projs[10:15,c(1,3:dim(projs)[2])]
projs[10:15,c(1,3:dim(projs)[2])]+1.5
shifted.projs[10:15,c(1,3:dim(projs)[2])]
pred.years <- as.numeric(dimnames(pred$quantiles)[[3]])
pred.years
dim(pred$quantiles)
pred$quantiles[1,,]
detach(package:bayesTFR, unload=TRUE)
source('run_tests.R')
load('last.dump.rda'); debugger()
get.total.iterations(m$mcmc.list, 0)
m$meta$auto.conf
m$meta$finished.iter
names(m$meta)
detach(package:bayesTFR, unload=TRUE)
source('run_tests.R')
load('last.dump.rda'); debugger()
length(get.countries.index(m$meta))
get.nr.countries(m$meta)
source('run_tests.R')
